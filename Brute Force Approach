Brute Force Approach 

Time Complexity :- O(n ^ 2)

// Input :
// n=5 
// cables = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]

//OutPut:
// maximal network rank of the entire infrastructure = 5



// CODE

#include <iostream>
#include<bits/stdc++.h>

using namespace std;

int maxNetworkRank(int n,vector<vector<int>>&cables)
{
        vector<unordered_set<int>> g(n);
	int res= INT_MIN;
        for (auto r: cabels) g[r[0]].insert(r[1]), g[r[1]].insert(r[0]);
        for (int i = 0; i < n; i++)
            for (int j = i + 1; j < n; j++) {
                int total = g[i].size() + g[j].size() - g[i].count(j);
                res = max(res, total);
            }
        return res;
}


int main()
{
    int n;
    cin>>n;
    vector<vector<int>>cables;
    for(int i=0;i<4;i++)
    {
        int x,y;
        cables.push_back({x,y});
    }
    
    int ans= maxNetworkRank(n,cables);
    cout<<ans;
    
    return 0;
}
